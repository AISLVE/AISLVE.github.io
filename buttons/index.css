body {
  min-height: 100vh;
  display: grid;
  align-items: center;
  justify-content: center;
  overflow: scroll;
  text-align: center;
  color-scheme: dark light;
  background: linear-gradient(315deg, hsl(170, 50%, 50%),hsl(270, 50%, 50%));
}

h1 {
  font-size: 3rem;
  text-decoration: underline;
  color: white;;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.wrapper {
  position: relative;
  justify-self: center;
  display: grid;
  gap: 2rem;
  max-width: max-content;
}

button {
  box-sizing: border-box;
  color: white;
  backdrop-filter: blur(.5rem);
}

.main {
  position: relative;
  margin: 0;
  padding: 2rem 3.25rem;
  border: 0;
  font: 500 1.5rem/1 sans-serif;
  transition: all 0.3s;
  cursor: pointer;
}

.one {
  position: relative;
  margin: 0;
  border: 0.05em white solid;
  border-radius: 4rem;
  transition: all 0.15s ease-out;
  background: transparent;
  overflow: hidden;
}

.one::after {
  content: '';
  border-radius: inherit;
  position: absolute;
  inset: 0px;
  background: white;
  transform: translateX(-100%);
  transition: all 0.4s;
}

.one:hover {
  color: black;
}

.one:hover::after{
  z-index: -1;
  transform: translateX(0);
}

.two {
  border-radius: 0.25rem;
  background: transparent;
  border: 1px white solid;
}

.two:hover {
  scale: 1.015;
  box-shadow: 0 0 1rem 0.5rem rgba(255, 255, 255, 0.25);
}

.three,.four {
  border-radius: 4px;
  border: 2px rgba(255, 255, 255, 0.3) solid;
  background: transparent;
  transition: all 0.15s linear;
}

.three:hover {
  border-color: rgba(255, 255, 255, 1);
}

.four {
  border: 2px rgba(255, 255, 255, 1) solid;
  transition: all 0.4s ;
}

.round-div:hover .four{
  border-radius: 4rem;
  background: white;
  color: black;
}

.five {
  position: relative;
  background: transparent;
  color: white;
  border: 5px white solid;
  border-radius: 0.45rem;
  transform: translate(-4px, -6px);
  box-shadow: 6px 4px 0 0 grey;
  overflow: hidden;
}

.five::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  transform: translateY(-100%);
  background: white;
  transition: all 0.3s;
}

.five:hover::after {
  transform: translateY(0%);
}

.five:hover {
  color: black;
  transform: translate(0px, 0px);
  box-shadow: none;
}

.six {
  background: hsl(196, 62%, 55%);
  color: hsl(0, 0%, 100%);
  border-radius: 0.25rem;
  border: 2px white solid;
  box-sizing: border-box; /* Include padding in the element's dimensions */
}

.six-div {
  cursor: pointer;
}

.six-div:hover .six{
  animation: jiggle 0.5s ease-out;
}

@keyframes jiggle {
  from,to {
    transform: scale(1, 1);
  }
  25% {
    transform: scale(0.9, 1.1);
  }
  50% {
    transform:scale(1.1, 0.9);
  }
  75% {
     transform: scale(0.95, 1.05);
  }
}

.seven {
  position: relative;
  height: 5.25rem;
  overflow: hidden;
  background: transparent;
  border: 2px white solid;
  border-radius: 4px;
}

span {
  display: grid;
  gap: 2.5rem;
  transition: all 0.2s ease-in-out;
}

p {
  margin: 0;
}

.seven:hover span{
  transform: translateY(-4.15rem);
}

.red,
.blue,
.green {
  position: absolute;
  inset: 0;
  margin: auto;
  height: 15rem;
  aspect-ratio: 3 / 2;
  border-radius: 15rem;
  z-index: -1;
  filter: blur(6rem);
}

.red {
  background-color: hsl(16, 100%, 61%);
  animation: red-blob 25s linear infinite;
  transform: translate(13rem, 0);
}

.blue {
  background-color: hsl(219, 100%, 50%);
  animation: blue-blob 25s linear infinite;
  transform: translate(18rem, 0);
}

.green {
  background-color: hsl(140, 93%, 55%);
  animation: green-blob 10s linear infinite;
  transform: translate(-10rem, 0);
}

@keyframes red-blob {
  0% {transform: translate(13rem, 0);}
  25% {transform: translate(0rem, 15rem);}
  50% {transform: translate(-15rem, 0);}
  75% {transform: translate(0, -15rem);}
  100% {transform: translate(13rem 0);}
}

@keyframes blue-blob {
  0% {transform: translate(18rem, 0);}
  25% {transform: translate(0rem, -18rem);}
  50% {transform: translate(18rem, 0);}
  75% {transform: translate(0rem, 18rem);}
  100% {transform: translate(18rem 0);}
}

@keyframes green-blob {
  from, to {transform: translate(-10rem, 0);}
  50% {transform: translate(10rem, 0);}
}